
/**
   GeekFactory - "INNOVATING TOGETHER"
   Distribucion de materiales para el desarrollo e innovacion tecnologica
   www.geekfactory.mx
 
   SKETCH PARA ENVIAR SMS CON ARDUINO TRAVÉS DE MODEM GSM SIM800L. AL MOMENTO
   DE ARRANCAR EL SKETCH SE ENVÍA EL MENSAJE DE TEXTO, LUEGO EL ARDUINO QUEDA EN MODO DE
   PUENTE USB-UART PARA PODER SEGUIR ENVIANDO COMANDOS AT AL MODULO GSM.
 
   ESTE SKETCH CREA UN UART EMULADO POR SOFTWARE EN LOS PINES INDICADOS Y REDIRIGE
   LOS DATOS DESDE Y HACIA EL UART POR HARDWARE EN LOS PINES 0 Y 1 DEL ARDUINO UNO.
   ESTA DISEÑADO PENSANDO EN LA TARJETA UNO, YA QUE EL MEGA SI DISPONE DE VARIOS
   UART POR HARDWARE Y PODRIA REALIZARSE SIN RECURRIR A SOFTWARESERIAL.
 
*/
#include <SoftwareSerial.h>
 
// CONFIGURACION DE UART GSM
#define CONFIG_GSM_RXPIN 10
#define CONFIG_GSM_TXPIN 8
#define CONFIG_GSM_BAUDRATE 9600
 
// PUERTO SERIE EMULADO: EL ARDUINO UNO TIENE SOLO 1 UART
// EN EL CONSTRUCTOR DE SOFTWARESERIAL SE ESPECIFICAN LOS PINES PARA RX Y TX
SoftwareSerial swseri = SoftwareSerial(CONFIG_GSM_RXPIN, CONFIG_GSM_TXPIN);
 
void setup()
{
  // PREPARAR LOS PUERTOS SERIALES A LA VELOCIDAD CONFIGURADA
  swseri.begin(CONFIG_GSM_BAUDRATE);
  Serial.begin(CONFIG_GSM_BAUDRATE);
 
  // IMPRIMIR EL ENCABEZADO INCIAL
  Serial.println(F("----------------------------------------------------"));
  Serial.println(F("  EJEMPLO PARA ENVIAR SMS CON ARDUINO Y MODULO GSM  "));
  Serial.println(F("            http://www.geekfactory.mx              "));
  Serial.println(F("----------------------------------------------------"));
 
  // ENVIAR LOS COMANDOS AT AL MODEM PARA EL ENVIO DEL MENSAJE SMS
  // CONFIGURAR EL MODULO PARA ENVIO DE MENSAJES EN MODO TEXTO (OTRA OPCION ES EL MODO PDU)
  swseri.println("AT+CMGF=1");
  delay(100);
 
  // ENVIAR EL COMANDO DE ENVIO DE SMS INCLUYENDO EL DESTINATARIO DEL MENSAJE
  swseri.println("AT+CMGS=\"+5491164359450\"");
  delay(100);
 
  // ENVIAR EL CUERPO DEL MENSAJE
  swseri.print("HOLA MUNDO SMS DESDE ARDUINO!");
  delay(500);
 
  // ENVIAR EL CARACTER DE CONTROL ASCII 26 (SUB) 0X1A INDICANDO EL FINAL DEL CUERPO DEL MENSAJE
  swseri.print(char(0x1A));
  delay(2000);
}
 
void loop()
{
  // SI HAY DATOS EN LA INTERFAZ SERIAL POR SOFTWARE, ESCRIBIRLOS EN EL UART FISICO
  if (swseri.available())
  {
    Serial.write(swseri.read());
  }
 
  // SI HAY DATOS EN LA INTERFAZ SERIAL POR HARDWARE, ESCRIBIRLOS EN EL UART EMULADO
  if (Serial.available())
  {
    swseri.write(Serial.read());
  }}
